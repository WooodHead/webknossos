# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# The general pages
GET     /                                   controllers.Game.index
GET     /trace/:experimentId                controllers.Game.trace(experimentId: String)
GET     /dashboard                          controllers.UserController.dashboard

# Tasks
GET     /tasks/requestTask                  controllers.TaskController.request
GET     /tasks/:id/finish                   controllers.TaskController.finish(id: String)

# Jira integration
GET     /jira                               controllers.Jira.index
POST    /jira                               controllers.Jira.submit

# Authentication
GET     /login                              controllers.Application.login
POST    /login                              controllers.Application.authenticate
GET     /logout                             controllers.Application.logout
GET     /register                           controllers.Application.register
POST    /register                           controllers.Application.registrate

# User settings
POST    /user/configuration                 controllers.UserController.saveSettings
GET     /user/configuration                 controllers.UserController.showSettings

# Facebook
GET     /login/fb                           controllers.login.FacebookLogin.login
GET     /login/fb/code                      controllers.login.FacebookLogin.loginCode(code: String)

# Twitter
GET     /login/tw                           controllers.login.TwitterLogin.login

# Binary Data
GET			/binary/ws													controllers.BinaryData.requestViaWebsocket( dataSetId: String, cubeSize: Int )
POST    /binary/ajax				                controllers.BinaryData.requestViaAjax( dataSetId: String, cubeSize: Int )
GET     /binary/ajax				                controllers.BinaryData.requestViaAjaxDebug( dataSetId: String, cubeSize: Int, x: Int, y: Int, z: Int, resolution: Int )
GET     /binary/create                      controllers.BinaryData.createGrid(dataSetName: String)

# Game Stuff
GET     /game/initialize                    controllers.Game.initialize

# Experiment Stuff
POST      /experiment                       controllers.ExperimentController.useAsActive(id: String, isNew: Boolean)
POST      /experiment/create                controllers.ExperimentController.createExplorational
GET       /experiment                       controllers.ExperimentController.list
GET       /experiment/:experimentId         controllers.ExperimentController.info( experimentId: String )
PUT       /experiment/:experimentId         controllers.ExperimentController.update( experimentId: String )

#Admin pages
GET     /admin/nmldownload                  controllers.admin.NMLIO.downloadList
GET     /admin/nmlupload                    controllers.admin.NMLIO.uploadForm
POST    /admin/nmlupload                    controllers.admin.NMLIO.upload
GET     /admin/nmldownload/:taskId          controllers.admin.NMLIO.download( taskId: String )


# Admin Tasks
GET     /admin/tasks/algorithm              controllers.admin.TaskAlgorithm.index
POST    /admin/tasks/algorithm              controllers.admin.TaskAlgorithm.submitAlgorithm
GET     /admin/tasks/algorithm/:id?use=true controllers.admin.TaskAlgorithm.useAlgorithm(id: String)

GET     /admin/taskTypes                    controllers.admin.TaskAdministration.types
POST    /admin/taskTypes/create             controllers.admin.TaskAdministration.createType

GET     /admin/tasks                        controllers.admin.TaskAdministration.list
GET     /admin/tasks/create                 controllers.admin.TaskAdministration.create
POST    /admin/tasks/createFromExperiment   controllers.admin.TaskAdministration.createFromExperiment

# User Administration
GET     /admin/users                        controllers.admin.UserAdministration.index
GET     /admin/users/:id/verify             controllers.admin.UserAdministration.verifyUser(id: String)
GET     /admin/users/:id/delete             controllers.admin.UserAdministration.deleteUser(id: String)

# Javascript routing
GET     /assets/javascripts/routes          controllers.Application.javascriptRoutes

# Map static resources from the /public folder to the /public path
GET     /assets/*file                       controllers.Assets.at(path="/public", file)


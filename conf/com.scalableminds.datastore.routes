# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Health endpoint
GET         /health                                                                            @com.scalableminds.braingames.datastore.controllers.Application.health

# Read binary data
POST        /datasets/:dataSetName/layers/:dataLayerName/data                                  @com.scalableminds.braingames.datastore.controllers.BinaryDataController.requestViaWebKnossos(dataSetName: String, dataLayerName: String)
GET         /datasets/:dataSetName/layers/:dataLayerName/data                                  @com.scalableminds.braingames.datastore.controllers.BinaryDataController.requestViaAjaxDebug(dataSetName: String, dataLayerName: String, cubeSize: Int, x: Int, y: Int, z: Int, resolution: Int, halfByte: Boolean ?= false)
GET         /datasets/:dataSetName/layers/:dataLayerName/sprite                                @com.scalableminds.braingames.datastore.controllers.BinaryDataController.requestSpriteSheet(dataSetName: String, dataLayerName: String, cubeSize: Int ?=128, imagesPerRow: Int ?= 8, x: Int, y: Int, z: Int, resolution: Int, halfByte: Boolean ?= false)
GET         /datasets/:dataSetName/layers/:dataLayerName/image.jpg                             @com.scalableminds.braingames.datastore.controllers.BinaryDataController.requestImage(dataSetName: String, dataLayerName: String, width: Int, height: Int, x: Int, y: Int, z: Int, resolution: Int, halfByte: Boolean ?= false, blackAndWhite: Boolean ?= false)
GET         /datasets/:dataSetName/layers/:dataLayerName/thumbnail.json                        @com.scalableminds.braingames.datastore.controllers.BinaryDataController.requestImageThumbnailJson(dataSetName: String, dataLayerName: String, width: Int, height: Int)
GET         /datasets/:dataSetName/layers/:dataLayerName/thumbnail.jpg                         @com.scalableminds.braingames.datastore.controllers.BinaryDataController.requestImageThumbnailJpeg(dataSetName: String, dataLayerName: String, width: Int, height: Int)

# Knossos compatibale routes
GET         /datasets/:dataSetName/layers/:dataLayerName/mag:resolution/x:x/y:y/z:z/bucket.raw @com.scalableminds.braingames.datastore.controllers.BinaryDataController.requestViaKnossos(dataSetName: String, dataLayerName: String, resolution: Int, x: Int, y: Int, z: Int, cubeSize: Int)

# Segmentation mappings
GET         /datasets/:dataSetName/layers/:dataLayerName/mappings/:mappingName                 @com.scalableminds.braingames.datastore.controllers.BinaryDataController.requestMapping(dataSetName: String, dataLayerName: String, mappingName: String)

# DataSource management
GET         /datasets                                                                          @com.scalableminds.braingames.datastore.controllers.DataSourceController.list
POST        /datasets                                                                          @com.scalableminds.braingames.datastore.controllers.DataSourceController.upload(token: String)
POST        /datasets/:dataSetName                                                             @com.scalableminds.braingames.datastore.controllers.DataSourceController.update(dataSetName: String)
GET         /datasets/:dataSetName                                                             @com.scalableminds.braingames.datastore.controllers.DataSourceController.explore(dataSetName: String)

# Volume tracings
POST        /tracings/volumes                                                                  @com.scalableminds.braingames.datastore.controllers.VolumeTracingController.create(dataSetName: String)
POST        /tracings/volumes/:tracingId                                                       @com.scalableminds.braingames.datastore.controllers.VolumeTracingController.update(dataSetName: String, tracingId: String)
GET         /tracings/volumes/:tracingId/download                                              @com.scalableminds.braingames.datastore.controllers.VolumeTracingController.download(dataSetName: String, tracingId: String)

# Skeleton tracings
POST        /tracings/skeletons/createEmpty                                                    @com.scalableminds.braingames.datastore.controllers.SkeletonTracingController.create(dataSetName: String)
POST        /tracings/skeletons/createFromNML                                                  @com.scalableminds.braingames.datastore.controllers.SkeletonTracingController.createFromNML(name: String)
POST        /tracings/skeletons/:annotationId                                                  @com.scalableminds.braingames.datastore.controllers.SkeletonTracingController.update(annotationId: String)
GET         /tracings/skeletons/:annotationId/downloadJson                                     @com.scalableminds.braingames.datastore.controllers.SkeletonTracingController.downloadJson(annotationId: String, version: Option[Long])
GET         /tracings/skeletons/:annotationId/downloadNML                                      @com.scalableminds.braingames.datastore.controllers.SkeletonTracingController.downloadNML(annotationId: String, version: Option[Long])
GET         /tracings/skeletons/:annotationId/duplicate                                        @com.scalableminds.braingames.datastore.controllers.SkeletonTracingController.duplicate(annotationId: String, version: Option[Long])

# Actions
GET         /triggers/checkInbox                                                               @com.scalableminds.braingames.datastore.controllers.DataSourceController.triggerInboxCheck()
GET         /triggers/backup                                                                   @com.scalableminds.braingames.datastore.controllers.Application.backup

# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Read data
POST        /datasets/:dataSetName/layers/:dataLayerName/data                                  com.scalableminds.datastore.controllers.BinaryDataController.requestViaAjax(dataSetName: String, dataLayerName: String)
POST        /datasets/:dataSetName/import                                                      com.scalableminds.datastore.controllers.DataSourceController.startImport(dataSetName: String)
GET         /datasets/:dataSetName/import                                                      com.scalableminds.datastore.controllers.DataSourceController.importProgress(dataSetName: String)
GET         /datasets/:dataSetName/layers/:dataLayerName/data                                  com.scalableminds.datastore.controllers.BinaryDataController.requestViaAjaxDebug(dataSetName: String, dataLayerName: String, cubeSize: Int, x: Int, y: Int, z: Int, resolution: Int)
GET         /datasets/:dataSetName/layers/:dataLayerName/sprite                                com.scalableminds.datastore.controllers.BinaryDataController.requestSpriteSheet(dataSetName: String, dataLayerName: String, cubeSize: Int ?=128, imagesPerRow: Int ?= 8, x: Int, y: Int, z: Int, resolution: Int)
GET         /datasets/:dataSetName/layers/:dataLayerName/image.jpg                             com.scalableminds.datastore.controllers.BinaryDataController.requestImage(dataSetName: String, dataLayerName: String, width: Int, height: Int, x: Int, y: Int, z: Int, resolution: Int)
GET         /datasets/:dataSetName/layers/:dataLayerName/thumbnail.json                        com.scalableminds.datastore.controllers.BinaryDataController.requestImageThumbnailJson(dataSetName: String, dataLayerName: String, width: Int, height: Int)
GET         /datasets/:dataSetName/layers/:dataLayerName/thumbnail.jpg                         com.scalableminds.datastore.controllers.BinaryDataController.requestImageThumbnailJpeg(dataSetName: String, dataLayerName: String, width: Int, height: Int)
POST        /datasets/:dataSetName/layers                                                      com.scalableminds.datastore.controllers.DataLayerController.create(dataSetName: String)
GET         /datasets/:dataSetName/layers/:dataLayerName/mappings/:dataLayerMappingName        com.scalableminds.datastore.controllers.BinaryDataController.requestSegmentationMapping(dataSetName: String, dataLayerName: String, dataLayerMappingName: String)

# Knossos compatibale routes
GET         /datasets/:dataSetName/layers/:dataLayerName/mag:resolution/x:x/y:y/z:z/bucket.raw        com.scalableminds.datastore.controllers.BinaryDataController.requestViaKnossos(dataSetName: String, dataLayerName: String, resolution: Int, x: Int, y: Int, z: Int, cubeSize: Int)

# Write data
PUT         /datasets/:dataSetName/layers/:dataLayerName/data                                  com.scalableminds.datastore.controllers.BinaryDataController.writeViaAjax(dataSetName: String, dataLayerName: String, cubeSize: Int)

# Volume download
GET         /datasets/:dataSetName/layers/:dataLayerName/download                              com.scalableminds.datastore.controllers.BinaryDataController.downloadDataLayer(dataSetName: String, dataLayerName: String)

version: 2
jobs:
  build_test_push_direct:
    docker:
      - image: scalableminds/sbt:sbt-0.13.15_mongo-3.4.10_node-9.x_jdk-8
    environment:
      USER_NAME: circleci
      USER_UID: 1001
      USER_GID: 1001
      TZ: Europe/Berlin
    steps:
      - checkout
      - run:
          name: Prepare dependency folders
          command: mkdir -p project/target target ~/.m2 ~/.ivy2 ~/.sbt ~/.yarn-cache
      - restore_cache:
          keys:
            - cache-{{ checksum ".circleci/cache_version" }}-{{ .Branch }}
            - cache-{{ checksum ".circleci/cache_version" }}-master

      - run:
          name: Install frontend dependencies
          command: yarn install
      - run:
          name: Build frontend documentation
          command: yarn run docs
      - run:
          name: Build webknossos (sbt and webpack)
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              sbt clean 'set scalacOptions in ThisBuild ++= Seq("-Xmax-classfile-name", "78")' compile stage exit
            else
              sbt 'set scalacOptions in ThisBuild ++= Seq("-Xmax-classfile-name", "78")' compile stage exit
            fi
      - run:
          name: Build webknossos-datastore (sbt)
          command: sbt "project webknossosDatastore" 'set scalacOptions in ThisBuild ++= Seq("-Xmax-classfile-name", "78")' compile stage exit

      - save_cache:
          key: cache-{{ checksum ".circleci/cache_version" }}-{{ .Branch }}-{{ .Revision }}
          paths:
            - "project/target"
            - "target"
            - "~/.m2"
            - "~/.ivy2"
            - "~/.sbt"
            - "~/.yarn-cache"

      - run:
          name: Lint frontend code
          command: bash -c "yarn run lint && yarn run am-i-pretty"
      - run:
          name: Validate frontend types with flow
          command: yarn flow
      - run:
          name: Run frontend tests
          command: yarn test-verbose
      #- run:
      #    name: Run end-to-end tests
      #    command: |
      #      for i in {1..3}; do # retry
      #        docker-compose run e2e-tests && s=0 && break || s=$?
      #      done
      #      (exit $s)

      - setup_remote_docker
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.18.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose

      - run:
          name: Build webknossos docker image
          command: |
            DOCKER_TAG=${CIRCLE_BRANCH}__${CIRCLE_BUILD_NUM} docker-compose build --pull webknossos
      - run:
          name: Build webknossos-datastore docker image
          command: |
            cd webknossos-datastore
            DOCKER_TAG=${CIRCLE_BRANCH}__${CIRCLE_BUILD_NUM} docker-compose build --pull webknossos-datastore

      - run:
          name: Run webknossos smoke test
          command: |
            set -x
            DOCKER_TAG=${CIRCLE_BRANCH}__${CIRCLE_BUILD_NUM} docker-compose up -d webknossos
            sleep 10
            docker run --network container:webknossos-datastore buildpack-deps:jessie \
              curl --retry 3 --max-time 15 -v http://localhost:9000
            docker-compose down --volumes --remove-orphans
      - run:
          name: Run webknossos-datastore smoke test
          command: |
            set -x
            cd webknossos-datastore
            DOCKER_TAG=${CIRCLE_BRANCH}__${CIRCLE_BUILD_NUM} docker-compose up -d webknossos-datastore
            sleep 10
            docker run --network container:webknossos-datastore buildpack-deps:jessie \
              curl --retry 3 --max-time 15 -v http://localhost:9090/data/health
            docker-compose down --volumes --remove-orphans

      - run:
          name: Push docker images
          command: |
            set -x
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker tag \
              scalableminds/webknossos:${CIRCLE_BRANCH}__${CIRCLE_BUILD_NUM} \
              scalableminds/webknossos:${CIRCLE_BRANCH}
            docker tag \
              scalableminds/webknossos-datastore:${CIRCLE_BRANCH}__${CIRCLE_BUILD_NUM} \
              scalableminds/webknossos-datastore:${CIRCLE_BRANCH}
            docker push scalableminds/webknossos:${CIRCLE_BRANCH}__${CIRCLE_BUILD_NUM}
            docker push scalableminds/webknossos:${CIRCLE_BRANCH}
            docker push scalableminds/webknossos-datastore:${CIRCLE_BRANCH}__${CIRCLE_BUILD_NUM}
            docker push scalableminds/webknossos-datastore:${CIRCLE_BRANCH}
            docker logout

  build_test_push_dockercp:
    docker:
      - image: docker/compose:1.18.0
    environment:
      USER_NAME: circleci
      USER_UID: 1001
      USER_GID: 1001
      TZ: Europe/Berlin
    steps:
      - checkout
      - run:
          name: Install curl & docker
          command: apk add --no-cache curl docker
      - setup_remote_docker
      - run:
          name: Pull sbt image
          command: docker-compose pull base
      - run:
          name: Prepare dependency folders
          command: mkdir -p project/target target ~/.m2 ~/.ivy2 ~/.sbt ~/.yarn-cache
      - restore_cache:
          keys:
            - cache-{{ checksum ".circleci/cache_version" }}-{{ .Branch }}
            - cache-{{ checksum ".circleci/cache_version" }}-master

      - run:
          name: Start base image
          command: docker-compose up -d base
      - run:
          name: Copy project to base image
          command: |
            docker cp ~ $(docker-compose ps -q base):/home/circleci
            docker cp . $(docker-compose ps -q base):/home/circleci/webknossos
      - run:
          name: Install frontend dependencies
          command: docker-compose exec base yarn install
      - run:
          name: Build frontend documentation
          command: docker-compose exec base yarn run docs
      - run:
          name: Build webknossos (sbt and webpack)
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker-compose exec base sbt clean compile stage
            else
              docker-compose exec base sbt compile stage
            fi
      - run:
          name: Build webknossos-datastore (sbt)
          command: docker-compose exec base sbt "project webknossosDatastore" compile stage

      - run:
          name: Copy project back to host
          command: |
            docker cp $(docker-compose ps -q base):/home/circleci ~
            docker cp $(docker-compose ps -q base):/home/circleci/webknossos .
      - save_cache:
          key: cache-{{ checksum ".circleci/cache_version" }}-{{ .Branch }}-{{ .Revision }}
          paths:
            - "project/target"
            - "target"
            - "~/.m2"
            - "~/.ivy2"
            - "~/.sbt"
            - "~/.yarn-cache"
      - run:
          name: Lint frontend code
          command: docker-compose exec base bash -c "yarn run lint && yarn run am-i-pretty"
      - run:
          name: Validate frontend types with flow
          command: docker-compose exec base yarn flow
      - run:
          name: Run frontend tests
          command: docker-compose exec base yarn test-verbose
      - run:
          name: Stop base image
          command: docker-compose down --volumes --remove-orphans
      #- run:
      #    name: Run end-to-end tests
      #    command: |
      #      for i in {1..3}; do # retry
      #        docker-compose run e2e-tests && s=0 && break || s=$?
      #      done
      #      (exit $s)

      - run:
          name: Build webknossos docker image
          command: |
            DOCKER_TAG=${CIRCLE_BRANCH}__${CIRCLE_BUILD_NUM} docker-compose build --pull webknossos
      - run:
          name: Build webknossos-datastore docker image
          command: |
            cd webknossos-datastore
            DOCKER_TAG=${CIRCLE_BRANCH}__${CIRCLE_BUILD_NUM} docker-compose build --pull webknossos-datastore

      - run:
          name: Run webknossos smoke test
          command: |
            set -x
            DOCKER_TAG=${CIRCLE_BRANCH}__${CIRCLE_BUILD_NUM} docker-compose up -d webknossos
            sleep 10
            docker run --network container:webknossos-datastore buildpack-deps:jessie \
              curl --retry 3 --max-time 15 -v http://localhost:9000
            docker-compose down --volumes --remove-orphans
      - run:
          name: Run webknossos-datastore smoke test
          command: |
            set -x
            cd webknossos-datastore
            DOCKER_TAG=${CIRCLE_BRANCH}__${CIRCLE_BUILD_NUM} docker-compose up -d webknossos-datastore
            sleep 10
            docker run --network container:webknossos-datastore buildpack-deps:jessie \
              curl --retry 3 --max-time 15 -v http://localhost:9090/data/health
            docker-compose down --volumes --remove-orphans

      - run:
          name: Push docker images
          command: |
            set -x
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker tag \
              scalableminds/webknossos:${CIRCLE_BRANCH}__${CIRCLE_BUILD_NUM} \
              scalableminds/webknossos:${CIRCLE_BRANCH}
            docker tag \
              scalableminds/webknossos-datastore:${CIRCLE_BRANCH}__${CIRCLE_BUILD_NUM} \
              scalableminds/webknossos-datastore:${CIRCLE_BRANCH}
            docker push scalableminds/webknossos:${CIRCLE_BRANCH}__${CIRCLE_BUILD_NUM}
            docker push scalableminds/webknossos:${CIRCLE_BRANCH}
            docker push scalableminds/webknossos-datastore:${CIRCLE_BRANCH}__${CIRCLE_BUILD_NUM}
            docker push scalableminds/webknossos-datastore:${CIRCLE_BRANCH}
            docker logout

workflows:
  version: 2
  default:
    jobs:
      - build_test_push_direct
      - build_test_push_dockercp
